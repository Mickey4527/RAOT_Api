"""table first

Revision ID: e23879915f67
Revises: 
Create Date: 2025-01-12 12:01:18.020016

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e23879915f67'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Geography',
    sa.Column('code', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('NumberTest',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RubberType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SoilType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('permission_type', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_name', sa.String(length=255), nullable=False),
    sa.Column('resource_description', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_name', sa.String(length=255), nullable=False),
    sa.Column('role_description', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('telephone', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_account_email'), 'user_account', ['email'], unique=True)
    op.create_table('Province',
    sa.Column('code', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=True),
    sa.Column('geography_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['geography_id'], ['Geography.code'], ),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('role_permission',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profile',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('firstname', sa.String(length=255), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('District',
    sa.Column('code', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['province_id'], ['Province.code'], ),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('WeatherGeography',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('province_id', sa.Integer(), nullable=False),
    sa.Column('rainfall_mm', sa.Float(), nullable=True),
    sa.Column('average_temperature', sa.Float(), nullable=True),
    sa.Column('average_humidity', sa.Float(), nullable=True),
    sa.Column('rainy_day_count', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['province_id'], ['Province.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SubDistrict',
    sa.Column('code', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('zip_code', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['District.code'], ),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('SoilGeography',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subdistrict_id', sa.Integer(), nullable=False),
    sa.Column('soil_type_id', sa.Integer(), nullable=False),
    sa.Column('fertility_top', sa.Float(), nullable=True),
    sa.Column('ph_top', sa.Float(), nullable=True),
    sa.Column('ph_low', sa.Float(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['soil_type_id'], ['SoilType.id'], ),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['SubDistrict.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RubberFarm',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('soil_id', sa.Integer(), nullable=False),
    sa.Column('weather_id', sa.Integer(), nullable=False),
    sa.Column('subdistrict_id', sa.Integer(), nullable=False),
    sa.Column('rubber_type_id', sa.Integer(), nullable=False),
    sa.Column('rubber_area', sa.Float(), nullable=True),
    sa.Column('rubber_tree_count', sa.Integer(), nullable=True),
    sa.Column('rubber_tree_age', sa.Integer(), nullable=True),
    sa.Column('dry_rubber_content', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['rubber_type_id'], ['RubberType.id'], ),
    sa.ForeignKeyConstraint(['soil_id'], ['SoilGeography.id'], ),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['SubDistrict.code'], ),
    sa.ForeignKeyConstraint(['weather_id'], ['WeatherGeography.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('RubberFarm')
    op.drop_table('SoilGeography')
    op.drop_table('SubDistrict')
    op.drop_table('WeatherGeography')
    op.drop_table('District')
    op.drop_table('user_role')
    op.drop_table('user_profile')
    op.drop_table('role_permission')
    op.drop_table('Province')
    op.drop_index(op.f('ix_user_account_email'), table_name='user_account')
    op.drop_table('user_account')
    op.drop_table('role')
    op.drop_table('resource')
    op.drop_table('permission')
    op.drop_table('SoilType')
    op.drop_table('RubberType')
    op.drop_table('NumberTest')
    op.drop_table('Geography')
    # ### end Alembic commands ###
